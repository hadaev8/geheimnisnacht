#
# Those decisions are used for enforcing racial system
# For each race we have different decision
#
decisions = {

	ai_race_trait_check = {
		potential = {
			ai = yes
			is_demon_trigger = no
			nor = {
				trait = creature_human
				trait = creature_amazon
				trait = creature_elf
				trait = creature_dwarf
				trait = creature_chaos_dwarf
				trait = creature_halfling
				trait = creature_orc
				trait = creature_goblin
				trait = creature_snotling
				trait = creature_nehekharan
				trait = creature_skink
				trait = creature_saurus
				trait = creature_slann
				trait = creature_skaven
				trait = creature_forestspirit
				trait = creature_treekin
				trait = creature_beastman
				trait = creature_ogre
				trait = creature_chaosspawn
				trait = vampire_carstein_visible
				trait = vampire_lahmian_visible
				trait = creature_celdragon
			}
		}
        allow = {
		}
        effect = {
			log = "work decision ai_race_trait_check [This.GetBestName]"
			character_event = {
				id = DR_startup.1
			}
        }
        ai_will_do = {
			factor = 1
		}
	}
    # Lizardmen
    # ai_dynasty_lizardman = {
		# potential = {
			# ai = yes
			# OR = {
				# trait = creature_amazon
				# graphical_culture = lizardmangfx
			# }
			# dynasty = 0
		# }
        # allow = {
            # always = no
		# }
        # effect = {
			# log = "work decision ai_dynasty_lizardman [This.GetBestName]"
			# any_spouse = {
				# remove_spouse = ROOT
			# }
			# character_event = {
				# id = slizardmen.81
			# }
		# }
        # ai_will_do = {
			# factor = 1
		# }
	# }
    ai_intermarriage_fix = {
		potential = {
			ai = yes
			spouse = {
				is_alive = yes
			}
			OR = {
				AND = {
					trait = creature_human
					spouse = {
						nor = {
							trait = creature_human
							trait = creature_amazon
							trait = creature_beastman
						}
						OR = {
							ai = yes
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_dwarf
					spouse = {
						NOT = {
							trait = creature_dwarf
						}
						NOT = {
							trait = creature_chaos_dwarf
						}
						OR = {
							ai = yes
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_elf
					spouse = {
						NOT = {
							trait = creature_elf
						}
						OR = {
							ai = yes
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_halfling
					spouse = {
						NOT = {
							trait = creature_halfling
						}
						OR = {
							ai = yes
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_ogre
					spouse = {
						NOT = {
							trait = creature_ogre
						}
						OR = {
							ai = no
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_skaven
					spouse = {
						NOT = {
							trait = creature_skaven
						}
						OR = {
							ai = no
							NOT = {
								has_global_flag = optionB
							}
						}
					}
				}
				AND = {
					trait = creature_orc
					is_married = yes
				}
				AND = {
					trait = creature_goblin
					is_married = yes
				}
				AND = {
					trait = creature_saurus
					is_married = yes
				}
				AND = {
					trait = creature_skink
					is_married = yes
				}
				AND = {
					trait = creature_slann
					is_married = yes
				}
			}
		}
        allow = {
            always = yes
		}
        effect = {
			any_spouse = {
				remove_spouse = ROOT
			}
		}
        ai_will_do = {
			factor = 1
		}
	}
	# Intermarriage fix
    ai_intermarriage_fix_elf = {
		potential = {
			ai = yes
			trait = creature_elf
			NOR = {
				trait = elven_scion
				trait = elven_maiden
			}
			age = 12
			NOT = {
				age = 45
			}
			is_married = no
		}
        allow = {
		}
        effect = {
			if = {
				limit = {
					is_female = yes
				}
				add_trait = elven_maiden
			}
			if = {
				limit = {
					is_female = no
				}
				add_trait = elven_scion
			}
		}
        ai_will_do = {
			factor = 1
		}
	}
}
